@startuml
!pragma layout smetana
!include ../clean.skin
set separator none

title: Creation Chain


package exasol.evscl <<external>> {
    class LocalMetadataReader
    class LocalQueryRewriter
}

package exasol.evsl {
    class entry <<function>>
    class ExasolAdapter
    class QueryRewriterFactory
    class RemoteQueryRewriter
    class MetadataReaderFactory
    class RemoteMetadataReader

    entry -d-> MetadataReaderFactory : "**1:** create"
    entry -r-> QueryRewriterFactory : "**2:** create"
    entry -d-> ExasolAdapter : "**3:** create"
    MetadataReaderFactory -r-> RemoteMetadataReader : "create"
    QueryRewriterFactory -l-> RemoteQueryRewriter : "create"


    url of entry is [[../sequence/seq_entry.svg]]
}

package exasol.vscl <<external>> {
    class QueryRenderer
    class RequestDispatcher

    url of RequestDispatcher is [[../sequence/seq_handle_request.svg]]
}

entry -d-> RequestDispatcher : "**4:** create"
MetadataReaderFactory --> LocalMetadataReader : create
QueryRewriterFactory --> LocalQueryRewriter : create
RemoteQueryRewriter -->  QueryRenderer : create
LocalQueryRewriter --> QueryRenderer : create

note as N1
    Factories, adapter and dispatcher are always created at the start.

    Depending on which type of virtual schema and what request is
    handled is used, the factories either produce a local or the remote
    variant of the query rewriter and metadata reader.
end note

exasol.vscl -[hidden]d- N1

@enduml