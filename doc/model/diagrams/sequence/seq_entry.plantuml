@startuml
!include ../clean.skin

title: Virtual Schema Adapter Entrypoint for Request Handling

participant "Exasol Compiler" as compiler
participant entry
participant RequestDispatcher
participant ExasolAdapter
participant QueryRewriterFactory
participant MetadataReaderFactory

activate compiler
compiler -> entry : adapter_call(request : JSON string)
activate entry
create MetadataReaderFactory
entry -> MetadataReaderFactory : new(exasol_context)
activate MetadataReaderFactory
MetadataReaderFactory -->> entry : instance
deactivate MetadataReaderFactory
create QueryRewriterFactory
entry -> QueryRewriterFactory : new()
activate QueryRewriterFactory
QueryRewriterFactory -->> entry : instance
deactivate QueryRewriterFactory
create ExasolAdapter
entry -> ExasolAdapter : new(metadata_reader_factory, metadata_reader_factory)
activate ExasolAdapter
ExasolAdapter -->> entry : instance
deactivate ExasolAdapter
create RequestDispatcher
entry -> RequestDispatcher : new(adapter, metadata_reader)
note right
    Different Virtual Schemas support different properties.
    The metadata reader factory and query rewriter factory
    support creating the required kind of objects depending
    on the settings the user chooses.
end note
activate RequestDispatcher
RequestDispatcher -->> entry : instance
deactivate RequestDispatcher
entry --> RequestDispatcher : adapter_call(request : JSON string)
activate RequestDispatcher
ref over RequestDispatcher, ExasolAdapter : **[[seq_handle_request.svg handle request]]**
RequestDispatcher -->> entry : response : JSON string
deactivate RequestDispatcher
entry --> compiler : response : JSON string
deactivate entry

@enduml